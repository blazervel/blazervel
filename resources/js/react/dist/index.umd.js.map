{"version":3,"file":"index.umd.js","sources":["../src/Label.js","../src/Checkbox.js","../src/Input.js","../src/Select.js","../src/Combobox.js","../src/Form.js","../src/ApplicationLogo.js","../src/Dropdown.js","../src/ValidationErrors.js","../src/Sidebar.js","../src/Topbar.js","../src/NoneFound.js","../src/Container.js","../src/Card.js","../src/Icon.js","../src/Header.js","../src/Button.js","../src/List.js","../src/layouts/Dashboard.js","../src/layouts/CreateEditShowIndex.js","../src/layouts/Auth.js","../src/Badge.js","../src/InputRow.js","../src/Invoice.js","../src/NavLink.js","../src/ResponsiveNavLink.js","../src/Stats.js","../src/Table.js"],"sourcesContent":["import React from 'react'\n\nexport function Label({ forInput, value = '', className, children }) {\n  return(\n    <label htmlFor={forInput} className={`block font-medium text-sm text-chrome-700 dark:text-chrome-400 ` + className}>\n      {value}{children}\n    </label>\n  )\n}","import React from 'react'\n\nexport function Checkbox({ name, value, handleChange }) {\n  return (\n    <input\n      type=\"checkbox\"\n      name={name}\n      value={value}\n      className=\"rounded border-chrome-300 text-theme-600 shadow-sm focus:border-theme-300 focus:ring focus:ring-theme-200 focus:ring-opacity-50\"\n      onChange={(e) => handleChange(e)}\n    />\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport { Label } from '.'\nimport { mergeCssClasses } from '@blazervel/blazervel'\n\nexport function Input({\n  xs = false,\n  sm = false,\n  md = false,\n  lg = false,\n  type = 'text',\n  className = '',\n  name,\n  id = '',\n  label = '',\n  value,\n  autoComplete,\n  required,\n  handleChange,\n  isFocused,\n  ...props\n}) {\n\n  id = id || name\n\n  let size = (xs && 'xs') || (sm && 'sm') || (md && 'md') || (lg && 'lg') || 'base',\n      sizeClassNames = {\n        xs:   [],\n        sm:   [],\n        base: [],\n        md:   [],\n        lg:   [],\n      }\n\n  className = mergeCssClasses(\n    className, \n    sizeClassNames[size], \n    [\n      'rounded-md',\n      'shadow-sm',\n      'border-chrome-300',\n      'dark:border-chrome-700',\n      'focus:border-theme-300',\n      'focus:ring',\n      'focus:ring-theme-200',\n      'focus:ring-opacity-50',\n      'bg-white',\n      'dark:bg-chrome-800',\n      'dark:text-white',\n    ]\n  )\n  \n  if (label.length) {\n    className+= ' mt-1'\n  }\n\n  const input = useRef()\n\n  useEffect(() => {\n    if (isFocused) {\n      input.current.focus()\n    }\n  }, [])\n\n  return (\n    <div className=\"flex flex-col items-start\">\n      {label.length ? (\n        <Label htmlFor={id}>{label}</Label>\n      ) : ('')}\n      <input\n        ref={input}\n        type={type}\n        name={name}\n        value={value}\n        className={className}\n        autoComplete={autoComplete}\n        required={required}\n        onChange={(e) => handleChange(e)}\n        {...props}\n      />\n    </div>\n  )\n}\n","import { Label } from \"./Label\"\n\nexport function Select({\n  name,\n  options = [],\n  value,\n  defaultValue = null,\n  id = '',\n  label = '',\n  className = '',\n  handleChange,\n}) {\n\n  id = id || name\n  \n  if (label.length) {\n    className+= ' mt-1'\n  }\n\n  options = Array.isArray(options) ? options : Object.entries(options)\n\n  return (\n    <div>\n      {label.length ? (\n        <Label htmlFor={id}>{label}</Label>\n      ) : ('')}\n      <select\n        id={id}\n        name={name}\n        className={`${className} block w-full pl-3 pr-10 py-2 h-11 text-base border-chrome-300 dark:border-chrome-700 bg-white dark:bg-chrome-800 dark:text-white focus:outline-none focus:ring-theme-500 focus:border-theme-500 sm:text-sm rounded-md`}\n        defaultValue={value || defaultValue}\n        onChange={(e) => handleChange(e)}\n      >\n        <option key=\"empty\" value=\"\">Choose One</option>\n\n        {options.map(option => typeof option[1] === 'object' ? (\n          <optgroup key={option[0]} label={option[0]}>\n            {option[1].map(groupOption => (\n              <option\n                key={`${option[0]}_${groupOption}`}\n                value={`${option[0]}_${groupOption}`}>{groupOption}</option>\n            ))}\n          </optgroup>\n        ) : (\n          <option key={option[1]} value={option[1]}>{option[0]}</option>\n        ))}\n\n      </select>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\nimport { Combobox as ComboboxHeadless } from '@headlessui/react'\nimport { mergeCssClasses } from '@blazervel/blazervel'\n\nexport function Combobox({ label, options, handleChange }) {\n  \n  const [query, setQuery] = useState('')\n  const [selectedOption, setSelectedOption] = useState()\n\n  const filteredOptions =\n    query === ''\n      ? options\n      : options.filter((option) => {\n          return option.name.toLowerCase().includes(query.toLowerCase())\n        })\n\n  return (\n    <ComboboxHeadless as=\"div\" value={selectedOption} onChange={(event) => { handleChange(event); setSelectedOption(event) }}>\n      \n      {label && (\n        <ComboboxHeadless.Label className=\"block text-sm font-medium text-chrome-700\">{label}</ComboboxHeadless.Label>\n      )}\n      \n      <div className={`relative ${label && 'mt-1'}`}>\n\n        <ComboboxHeadless.Input\n          className=\"w-full rounded-md border border-chrome-200 dark:text-white dark:border-chrome-700 bg-white dark:bg-chrome-800 py-2 pl-3 pr-10 shadow-sm focus:border-theme-500 focus:outline-none focus:ring-1 focus:ring-theme-500 sm:text-sm\"\n          onChange={(event) => setQuery(event.target.value)}\n          displayValue={(option) => option && option.name}\n        />\n\n        <ComboboxHeadless.Button className=\"absolute inset-y-0 right-0 flex items-center rounded-r-md px-2 focus:outline-none\">\n          <SelectorIcon className=\"h-5 w-5 text-chrome-500\" aria-hidden=\"true\" />\n        </ComboboxHeadless.Button>\n\n        {filteredOptions.length > 0 && (\n          <ComboboxHeadless.Options className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white dark:bg-chrome-800 py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n            {filteredOptions.map((option) => (\n              <ComboboxHeadless.Option\n                key={option.id}\n                value={option}\n                className={({ active }) =>\n                  mergeCssClasses(\n                    'relative cursor-default select-none py-2 pl-3 pr-9',\n                    active ? 'bg-theme-600 text-white' : 'dark:text-white'\n                  )\n                }\n              >\n                {({ active, selected }) => (\n                  <>\n\n                    <span className={mergeCssClasses('block truncate', selected && 'font-semibold')}>\n                      {option.name}\n                    </span>\n\n                    {selected && (\n                      <span\n                        className={mergeCssClasses(\n                          'absolute inset-y-0 right-0 flex items-center pr-4',\n                          active ? 'text-white' : 'text-theme-600'\n                        )}\n                      >\n                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                      </span>\n                    )}\n\n                  </>\n                )}\n              </ComboboxHeadless.Option>\n            ))}\n          </ComboboxHeadless.Options>\n        )}\n      </div>\n    </ComboboxHeadless>\n  )\n}","import { useForm } from '@inertiajs/inertia-react'\nimport {\n  ButtonPrimary,\n  Button,\n  Input,\n  Select,\n  Label,\n  ValidationErrors,\n  Combobox\n} from '.'\n\nexport function Form({ fields, route, method, formSubmitButtonText, className, ...props }) {\n\n  const defaults = {}\n  \n  fields.map(field => defaults[field.name] = field.default)\n\n  const { data, setData, post, put, processing, progress, errors, reset } = useForm(defaults)\n\n  const onHandleChange = (event) => {\n    \n    const element = event.target\n\n    let value\n\n    switch(element.type) {\n      case 'checkbox':\n        value = element.checked\n      default:\n        value = element.value\n    }\n\n    setData(element.name, value)\n\n  }\n\n  const submit = (e) => {\n    e.preventDefault()\n\n    if (method === 'put') {\n      put(route)\n    } else {\n      post(route)\n    }\n  }\n\n  return (\n    <form onSubmit={submit} className={`${className} block relative`} {...props}>\n\n      <ValidationErrors errors={errors} />\n\n      <div className=\"space-y-6\">\n          \n        {fields.map((field, i) => (\n\n          <div key={field.name}>\n\n            {field.label && (\n              <Label forInput={field.name} value={field.label} />\n            )}\n\n            {field.type === 'select' && (\n\n              <Select\n                options={field.options}\n                name={field.name}\n                value={data[field.name]}\n                autoComplete={['first_name', 'last_name', 'email', 'password'].indexOf(field.name) >= 0 ? field.name : null}\n                className=\"block w-full mt-1\"\n                isFocused={i === 0}\n                handleChange={onHandleChange}\n                required={field.required} />\n\n            )}\n\n            {['text', 'number', 'email', 'date'].indexOf(field.type) >= 0 && (\n\n              <Input\n                type={field.type}\n                name={field.name}\n                value={data[field.name]}\n                autoComplete={['first_name', 'last_name', 'email', 'password'].indexOf(field.name) >= 0 ? field.name : null}\n                className=\"block w-full mt-1\"\n                isFocused={i === 0}\n                handleChange={onHandleChange}\n                required={field.required} />\n\n            )}\n\n            {field.type === 'file' && (\n\n              <div>\n\n                <input\n                  type=\"file\"\n                  name={field.name}\n                  className=\"text-chrome-500\"\n                  onChange={event => setData(field.name, event.target.files[0])}\n                  required={field.required} />\n\n                {progress && (\n                  <progress value={progress.percentage} max=\"100\">\n                    {progress.percentage}%\n                  </progress>\n                )}\n\n              </div>\n\n            )}\n\n            {field.type === 'combobox' && (\n\n              <Combobox\n                options={field.options}\n                handleChange={option => setData(field.name, option.id)}\n                />\n\n            )}\n\n          </div>\n\n        ))}\n\n      </div>\n\n      <div className=\"flex justify-end mt-4\">\n\n        <Button onClick={() => window.history.back()} className=\"sm:bg-transparent sm:hover:bg-transparent sm:underline sm:hover:no-underline\" text=\"Cancel\" />\n        \n        <ButtonPrimary\n          type=\"submit\"\n          className=\"ml-4\"\n          disabled={processing}\n          text={formSubmitButtonText} />\n\n      </div>\n\n    </form>\n  )\n}","import { HeartIcon } from '@heroicons/react/solid'\nimport { Link } from '.'\n\nexport function ApplicationLogo({ text = false, href = null, lg = false, className, children }) {\n\n  let ApplicationLogoWrapper = ({ href = null, children, ...props }) => (\n    href ? (\n      <Link href={href} {...props}>{children}</Link>\n    ) : (\n      <div {...props}>{children}</div>\n    )\n  )\n\n  return (\n    <ApplicationLogoWrapper href={href} className={`group flex items-center space-x-2 ${className}`}>\n      <span className={`${lg ? 'p-2' : 'p-1.5'} bg-gradient-to-r from-theme-400 to-theme-300 text-theme-600 rounded-lg inline-flex`}>\n        <HeartIcon className={lg ? 'h-8 w-8' : 'h-4 w-4'} />\n      </span>\n      {text && (\n        <span className=\"font-bold text-theme-300 group-hover:text-theme-600 dark:text-theme-600 dark:group-hover:text-theme-400 transition-colors\">\n          {text}\n        </span>\n      )}\n    </ApplicationLogoWrapper>\n  )\n}","import React, { useState, useContext } from 'react'\nimport { Link } from '.'\nimport { Transition } from '@headlessui/react'\n\nconst DropDownContext = React.createContext()\n\nconst Dropdown = ({ children }) => {\n  const [open, setOpen] = useState(false)\n\n  const toggleOpen = () => {\n    setOpen((previousState) => !previousState)\n  }\n\n  return (\n    <DropDownContext.Provider value={{ open, setOpen, toggleOpen }}>\n      <div className=\"relative\">{children}</div>\n    </DropDownContext.Provider>\n  )\n}\n\nconst Trigger = ({ children }) => {\n  const { open, setOpen, toggleOpen } = useContext(DropDownContext)\n\n  return (\n    <>\n      <div onClick={toggleOpen}>{children}</div>\n\n      {open && <div className=\"fixed inset-0 z-40\" onClick={() => setOpen(false)}></div>}\n    </>\n  )\n}\n\nconst Content = ({ align = 'right', width = '48', contentClasses = 'py-1 bg-white', children }) => {\n  const { open, setOpen } = useContext(DropDownContext)\n\n  let alignmentClasses = 'origin-top'\n\n  if (align === 'left') {\n    alignmentClasses = 'origin-top-left left-0'\n  } else if (align === 'right') {\n    alignmentClasses = 'origin-top-right right-0'\n  }\n\n  let widthClasses = ''\n\n  if (width === '48') {\n    widthClasses = 'w-48'\n  }\n\n  return (\n    <>\n      <Transition\n        show={open}\n        enter=\"transition ease-out duration-200\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        {open && (\n          <div\n            className={`absolute z-50 mt-2 rounded-md shadow-lg ${alignmentClasses} ${widthClasses}`}\n            onClick={() => setOpen(false)}\n          >\n            <div className={`rounded-md ring-1 ring-black ring-opacity-5 ` + contentClasses}>\n              {children}\n            </div>\n          </div>\n        )}\n      </Transition>\n    </>\n  )\n}\n\nconst DropdownLink = ({ href, method = 'post', as = 'a', children }) => {\n  return (\n    <Link\n      href={href}\n      method={method}\n      as={as}\n      className=\"block w-full px-4 py-2 text-left text-sm leading-5 text-chrome-700 hover:bg-chrome-100 focus:outline-none focus:bg-chrome-100 transition duration-150 ease-in-out\"\n    >\n      {children}\n    </Link>\n  )\n}\n\nDropdown.Trigger = Trigger\nDropdown.Content = Content\nDropdown.Link = DropdownLink\n\nexport default Dropdown","import React from 'react'\n\nexport function ValidationErrors({ errors }) {\n  return (\n    Object.keys(errors).length > 0 && (\n      <div className=\"mb-4\">\n        <div className=\"font-medium text-red-600\">Whoops! Something went wrong.</div>\n\n        <ul className=\"mt-3 list-disc list-inside text-sm text-red-600\">\n          {Object.keys(errors).map(function (key, index) {\n            return <li key={index}>{errors[key]}</li>\n          })}\n        </ul>\n      </div>\n    )\n  )\n}\n","import React, { Fragment, useState } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ApplicationLogo, Link } from '.'\nimport { mergeCssClasses } from '@blazervel/blazervel'\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\n\nexport function Sidebar({ children, navigation }) {\n\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  \n  const Navigation = () => (\n    <nav className=\"mt-5 flex-1 px-2 space-y-3\">\n      {navigation.map((item) => (\n        <Link\n          key={item.name}\n          href={item.href}\n          className={mergeCssClasses(\n            item.current && 'bg-chrome-100 text-chrome-900 dark:text-chrome-400 dark:bg-chrome-800',\n            !item.current && 'text-chrome-500 hover:bg-chrome-50 hover:text-chrome-900 dark:text-chrome-600 dark:hover:bg-chrome-800 dark:hover:text-chrome-400',\n            'group flex items-center px-2 py-1.5 font-medium rounded-lg transition-colors'\n          )}\n        >\n          <i\n            className={mergeCssClasses(\n              `fa-solid fa-${item.icon} fa-fw`,\n              item.current ? 'text-chrome-500 dark:text-chrome-600' : 'text-chrome-400 group-hover:text-chrome-500 dark:text-chrome-800 dark:group-hover:text-chrome-500',\n              'mr-3 flex-shrink-0 transition-colors'\n            )}\n            aria-hidden=\"true\"></i>\n\n          <span className=\"-mb-0.5\">\n            {item.name}\n          </span>\n        </Link>\n      ))}\n    </nav>\n  )\n\n  return (\n    <div>\n      <Transition.Root show={sidebarOpen} as={Fragment}>\n        <Dialog as=\"div\" className=\"fixed inset-0 flex z-40 md:hidden\" onClose={setSidebarOpen}>\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition-opacity ease-linear duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity ease-linear duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-chrome-100 dark:bg-chrome-800 bg-opacity-75\" />\n          </Transition.Child>\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition ease-in-out duration-300 transform\"\n            enterFrom=\"-translate-x-full\"\n            enterTo=\"translate-x-0\"\n            leave=\"transition ease-in-out duration-300 transform\"\n            leaveFrom=\"translate-x-0\"\n            leaveTo=\"-translate-x-full\"\n          >\n            <div className=\"relative flex-1 flex flex-col w-full bg-chrome-100 dark:bg-chrome-900\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"ease-in-out duration-300\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"ease-in-out duration-300\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                  <button\n                    type=\"button\"\n                    className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n                    onClick={() => setSidebarOpen(false)}\n                  >\n                    <span className=\"sr-only\">Close sidebar</span>\n                    <XIcon className=\"h-6 w-6 text-white\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n              </Transition.Child>\n              <div className=\"flex-1 h-0 pt-5 pb-4 overflow-y-auto\">\n                  \n                <ApplicationLogo\n                  className=\"flex-shrink-0 px-4\"\n                  href={route('home')}\n                  text=\"Roberta\" />\n                \n                <Navigation />\n\n              </div>\n\n            </div>\n          </Transition.Child>\n          <div className=\"flex-shrink-0 w-14\"></div>\n        </Dialog>\n      </Transition.Root>\n\n      <div className=\"relative hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n        \n        <div className=\"absolute inset-0 z-1 opacity-50 bg-gradient-to-r from-white to-chrome-50 dark:from-chrome-900 dark:to-chrome-800\"></div>\n\n        <div className=\"relative z-10 flex-1 flex flex-col min-h-0\">\n          <div className=\"flex-1 flex flex-col pt-5 pb-4 overflow-y-auto\">\n            \n            <ApplicationLogo\n              className=\"flex-shrink-0 px-4\"\n              href={route('home')}\n              text=\"Roberta\" />\n\n            <Navigation />\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"md:pl-64 flex flex-col flex-1\">\n        <div className=\"sticky top-0 z-10 md:hidden pl-1 pt-1 sm:pl-3 sm:pt-3\">\n          <button\n            type=\"button\"\n            className=\"h-12 w-12 inline-flex items-center justify-center rounded-md text-chrome-500 hover:text-chrome-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-theme-500 bg-chrome-100 dark:bg-chrome-800\"\n            onClick={() => setSidebarOpen(true)}\n          >\n            <span className=\"sr-only\">Open sidebar</span>\n            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n        </div>\n        <main className=\"flex-1\">\n          {children}\n        </main>\n      </div>\n\n    </div>\n  )\n}","import { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport { Link, ApplicationLogo } from '.'\nimport { mergeCssClasses } from '@blazervel/blazervel'\n\nexport function Topbar({ navigation, className, ...props }) {\n  return (\n    <Disclosure as=\"nav\" className={`${className} bg-white shadow`} {...props}>\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between h-16\">\n              <div className=\"flex\">\n                \n                <div className=\"flex-shrink-0 flex items-center\">\n                  <ApplicationLogo />\n                </div>\n\n                {navigation.length > 0 && (\n                  <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\n                    {navigation.map(item => (\n                      <Link\n                        key={item.name}\n                        href={item.href}\n                        className={item.current ? 'border-indigo-500 text-gray-900' : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'}\n                      >\n                        {item.name}\n                      </Link>\n                    ))}\n                  </div>\n                )}\n              </div>\n              <div className=\"hidden sm:ml-6 sm:flex sm:items-center\">\n                \n                {/* \n                <button\n                  type=\"button\"\n                  className=\"bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                  <div>\n                    <Menu.Button className=\"bg-white rounded-full flex text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-200\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={mergeCssClasses(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Your Profile\n                          </a>\n                        )}\n                      </Menu.Item>\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={mergeCssClasses(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Settings\n                          </a>\n                        )}\n                      </Menu.Item>\n                      <Menu.Item>\n                        {({ active }) => (\n                          <a\n                            href=\"#\"\n                            className={mergeCssClasses(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                          >\n                            Sign out\n                          </a>\n                        )}\n                      </Menu.Item>\n                    </Menu.Items>\n                  </Transition>\n                </Menu>\n                */}\n\n              </div>\n\n              <div className=\"-mr-2 flex items-center sm:hidden\">\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n\n            </div>\n          </div>\n\n          {navigation.length > 0 && (\n            <Disclosure.Panel className=\"sm:hidden\">\n\n              <div className=\"pt-2 pb-3 space-y-1\">\n                {navigation.map(item => (\n                  <Disclosure.Button\n                    key={item.name}\n                    as=\"a\"\n                    href={item.href}\n                    className={item.current ? 'bg-indigo-50 border-indigo-500 text-indigo-700' : 'border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700'}\n                  >\n                    {/* {item.icon} */}\n                    {item.name}\n                  </Disclosure.Button>\n                ))}\n              </div>\n\n              {/* \n              <div className=\"pt-4 pb-3 border-t border-gray-200\">\n                <div className=\"flex items-center px-4\">\n                  <div className=\"flex-shrink-0\">\n                    <img\n                      className=\"h-10 w-10 rounded-full\"\n                      src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"ml-3\">\n                    <div className=\"text-base font-medium text-gray-800\">Tom Cook</div>\n                    <div className=\"text-sm font-medium text-gray-500\">tom@example.com</div>\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"ml-auto flex-shrink-0 bg-white p-1 rounded-full text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    <span className=\"sr-only\">View notifications</span>\n                    <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n                <div className=\"mt-3 space-y-1\">\n                  <Disclosure.Button\n                    as=\"a\"\n                    href=\"#\"\n                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\n                  >\n                    Your Profile\n                  </Disclosure.Button>\n                  <Disclosure.Button\n                    as=\"a\"\n                    href=\"#\"\n                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\n                  >\n                    Settings\n                  </Disclosure.Button>\n                  <Disclosure.Button\n                    as=\"a\"\n                    href=\"#\"\n                    className=\"block px-4 py-2 text-base font-medium text-gray-500 hover:text-gray-800 hover:bg-gray-100\"\n                  >\n                    Sign out\n                  </Disclosure.Button>\n                </div>\n              </div>\n              */}\n              \n            </Disclosure.Panel>\n          )}\n\n        </>\n      )}\n    </Disclosure>\n  )\n}\n","import { Button } from '.'\n\nexport function NoneFound({ route, method = 'GET', ...props }) {\n  return (\n    <div className=\"flex justify-center items-center space-x-4 py-12 border-2 rounded-xl border-dashed border-chrome-200 dark:border-chrome-600\" {...props}>\n      <span className=\"text-chrome-500 font-medium text-sm\">None yet...</span> \n      {route ? (\n        <Button outline route={route} method={method}>Add one</Button>\n      ) : ''}\n    </div>\n  )\n}","export const Container = ({ xs = false, sm = false, lg = false, className, children }) => {\n  \n  let maxWidth = 'max-w-3xl'\n  \n  if (lg) {\n    maxWidth = 'max-w-7xl' \n  } else if (sm) {\n    maxWidth = 'max-w-xl' \n  } else if (xs) {\n    maxWidth = 'max-w-md' \n  }\n\n  const padding = 'px-4 sm:px-6 lg:px-8'\n\n  return (\n    <div className={`${className} ${padding} w-full max-w-7xl mx-auto`}>\n      <div className={`${maxWidth} mx-auto`}>\n        {children}\n      </div>\n    </div>\n  )\n}","export const Card = ({ xs = false, sm = false, lg = false, className, children }) => (\n  <div className={`${className} w-full border rounded-xl border-chrome-200 dark:border-chrome-800 shadow p-4 sm:p-6`}>\n    {children}\n  </div>\n)","export const Icon = ({\n  name,\n  fw = false,\n  sm = false,\n  lg = false,\n  className,\n  ...props\n}) => (\n  <i\n    className={`${className} fa-solid fa-${name} ${fw && 'fa-fw'} ${sm && 'fa-sm'} ${lg && 'fa-lg'}`}\n    {...props}\n    aria-hidden=\"true\"></i>\n)","import { Icon } from '.'\n\nexport function SectionHeader({\n  icon,\n  superHeading,\n  heading,\n  children,\n  actions,\n  sm = false,\n  lg = false,\n  xl = false,\n  className,\n  ...props\n}) {\n\n  return (\n    <div className={`${className} md:flex md:items-center md:justify-between`} {...props}>\n\n      {icon && (\n        <div className=\"pr-3\">\n          <div className=\"rounded-lg flex items-center justify-center h-10 w-10 bg-chrome-50 dark:bg-chrome-800\">\n            <Icon name={icon} lg={lg || xl} className=\"text-chrome-400 dark:text-chrome-600\" />\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex-1 min-w-0\">\n\n        {superHeading && (\n          <div className=\"uppercase tracking-wider text-[0.6rem] font-medium text-chrome-400 dark:text-chrome-600\">\n            {superHeading}\n          </div>\n        )}\n\n        <h2 className={`${sm && 'text-sm sm:text-base'} ${lg && 'text-xl sm:text-2xl'} ${xl && 'text-2xl sm:text-3xl'} ${!(sm || lg || xl) && 'sm:text-xl'} font-medium leading-7 text-chrome-900 dark:text-chrome-100 sm:truncate`}>\n          {heading}\n          {children}\n        </h2>\n\n      </div>\n      \n      {actions & (\n        <div className=\"flex-shrink-0 mt-4 md:mt-0 pl-0 md:pl-4 space-x-3\">\n          {actions}\n        </div>\n      )}\n\n    </div>\n  )\n}\n\nexport const PageHeader = ({ ...props }) => (\n  <SectionHeader lg {...props} />\n)","import { mergeCssClasses } from '@blazervel/blazervel'\nimport { Link } from '.'\n\nfunction ButtonBase({\n  xs = false,\n  sm = false,\n  md = false,\n  lg = false,\n  type = 'button',\n  className = '',\n  ...props\n}) {\n  \n  const size = (xs && 'xs') || (sm && 'sm') || (md && 'md') || (lg && 'lg') || 'base',\n        sizeClassNames = {\n          xs:   ['px-2.5', 'py-1.5', 'text-xs'],\n          sm:   ['px-3',   'py-2',   'text-sm', 'leading-4'],\n          base: ['px-4',   'py-2',   'text-sm'],\n          md:   ['px-4',   'py-2',   'text-base'],\n          lg:   ['px-6',   'py-3',   'text-base'],\n        }\n\n  className = mergeCssClasses(\n    className, \n    sizeClassNames[size],\n    [\n      'inline-flex',\n      'items-center',\n      'border',\n      'font-medium',\n      'rounded-md',\n      'shadow-sm',\n      'focus:outline-none',\n      'focus:ring-2',\n      'focus:ring-offset-2',\n    ]\n  )\n\n  return (\n    <ButtonElement type={type} className={className} {...props}>\n      {props.children}\n    </ButtonElement>\n  )\n\n}\n\nexport function ButtonPrimary({\n  className = '',\n  outline = false,\n  text = '',\n  children,\n  ...props\n}) {\n\n  className = mergeCssClasses(\n    className, \n    outline ? [\n      'border-theme-200',\n      'text-theme-500'\n    ] : [\n      'border-transparent',\n      'text-theme-300',\n      'bg-theme-700',\n      'hover:bg-theme-800',\n      'hover:text-theme-100',\n    ],\n    [\n      'transition-colors',\n      'focus:ring-theme-500',\n    ]\n  )\n\n  return (\n    <ButtonBase className={className} {...props}>\n      {text}{children}\n    </ButtonBase>\n  )\n}\n\nexport function Button({\n  className = '',\n  outline = false,\n  text = '',\n  children,\n  ...props\n}) {\n\n  className = mergeCssClasses(\n    className, \n    outline ? [\n      // Border Color\n      'border-chrome-200',\n      'dark:border-chrome-800',\n      // Text Color\n      'text-chrome-500',\n      'dark:border-chrome-800'\n    ] : [\n      // Border Color\n      'border-chrome-300',\n      'dark:border-transparent',\n      // Text Color\n      'text-chrome-700',\n      'dark:text-white',\n      // BG Color\n      'bg-white',\n      'dark:bg-chrome-600',\n      // Hover BG Color\n      'hover:bg-chrome-50',\n      'dark:hover:bg-chrome-700',\n    ],\n    [\n      'focus:ring-chrome-500',\n      'dark:focus:ring-offset-chrome-800',\n    ]\n  )\n\n  return (\n    <ButtonBase className={className} {...props}>\n      {text}{children}\n    </ButtonBase>\n  )\n}\n\nfunction ButtonElement({\n  children,\n  route = '',\n  data = {},\n  only = [],\n  method = 'GET',\n  ...props\n}) {\n\n  if (!route.length) {\n    return (\n      <button {...props}>{children}</button>\n    )\n  }\n\n  if (method === 'GET') {\n    return (\n      <Link href={route} {...props}>{children}</Link>\n    )\n  }\n\n  const { post, processing, errors } = useForm()\n\n  const submit = (e) => {\n    e.preventDefault()\n\n    let options = {}\n\n    if (only.length) {\n      options.only = only\n      options.replace = true\n    }\n\n    Inertia.post(route, data, options)\n  }\n\n  props.type = 'submit'\n\n  return (\n    <form onSubmit={submit}>\n      <ValidationErrors errors={errors} />\n      <button {...props}>{children}</button>\n    </form>\n  )\n}","import { NoneFound, Link, Icon } from '.'\n\nexport function List({\n  \n  items,\n  itemTitle = null,\n  itemRoute,\n  itemActions,\n\n  headingIcon = '',\n  heading = '',\n\n  noneFoundRoute = null,\n\n  className\n\n}) {\n  return (\n    <div className={className}>\n\n      {heading && (\n          <h3 className=\"font-medium pb-5 flex items-center space-x-1\">\n            {headingIcon && (\n              <Icon name={headingIcon} className=\"text-chrome-400 dark:text-chrome-600\" />\n            )}\n            <span className=\"text-chrome-500\">{heading}</span>\n          </h3>\n      )}\n\n      <ul role=\"list\" className=\"space-y-3\">\n\n        {items.length ? items.map(item => (\n\n          <ListItem\n            key={item.id} \n            item={item}\n            itemTitle={itemTitle}\n            itemRoute={itemRoute}\n            itemActions={itemActions} \n            />\n\n        )) : (\n        \n          <NoneFound route={noneFoundRoute} />\n        \n        )}\n\n      </ul>\n\n    </div>\n  )\n}\n\nexport const ListItem = ({ item, itemTitle, itemRoute, itemActions }) => {\n\n  let ListItemWrapper = ({ href = null, children, ...props }) => (\n    href ? (\n      <Link href={href} {...props}>{children}</Link>\n    ) : (\n      <div {...props}>{children}</div>\n    )\n  )\n\n  return (\n    <li className=\"group rounded-xl bg-chrome-50 dark:bg-chrome-800 overflow-hidden\">\n      <ListItemWrapper href={itemRoute && itemRoute(item)} className=\"block hover:bg-chrome-50 dark:hover:bg-chrome-800 transition-colors\">\n\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n\n          <div className=\"flex-1 font-medium text-chrome-500 group-hover:text-chrome-900 dark:group-hover:text-chrome-200 transition-colors truncate\">\n            {itemTitle !== null ? itemTitle(item) : (item.title || item.name)}\n          </div>\n\n          <div className=\"ml-5 flex-shrink-0\">\n            {itemActions ? itemActions(item) : (\n              <Icon name=\"chevron-right\" sm fw className=\"text-chrome-200 dark:text-chrome-700\" />\n            )}\n          </div>\n\n        </div>\n\n      </ListItemWrapper>\n    </li>\n  )\n}","import { Head } from '@inertiajs/inertia-react'\nimport { Sidebar, Topbar, Container } from '..'\n\nexport function Dashboard({\n  navigation = [],\n  pageTitle,\n  sidebar = true,\n  fullWidth = false,\n  className,\n  children,\n  ...props\n}) {\n\n  if (sidebar) {\n    return (\n      <div id=\"dashboard\" className={`${className} bg-white dark:bg-chrome-900 min-h-screen`} {...props}>\n        <Head title={pageTitle} />\n        <Sidebar navigation={navigation}>\n          <Container className=\"py-12\">\n            {children}\n          </Container>\n        </Sidebar>\n      </div>\n    )\n  }\n\n  return (\n    <div\n      id=\"dashboard\"\n      className={`${className} bg-white dark:bg-chrome-900 min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0`}\n      {...props}\n    >\n      <Head title={pageTitle} />\n      <Topbar navigation={navigation} />\n      <Container>\n        {children}\n      </Container>\n    </div>\n  )\n}","import { Dashboard } from './Dashboard'\nimport {\n  PageHeader,\n  Container,\n  Card,\n  List,\n  Form\n} from '..'\n\nexport const FormLayout = ({\n\n  pageTitle,\n  pageSuperHeading,\n  pageHeading,\n  pageActions,\n\n  formAction,\n  formRoute,\n  formFields,\n  formSubmitButtonText,\n\n  children,\n\n}) => (\n  <Dashboard pageTitle={pageTitle}>\n\n    <Container sm>\n\n      <Card>\n\n        <PageHeader\n          heading={pageHeading || pageTitle}\n          actions={pageActions}\n          sm />\n\n        {children && (\n          <div className=\"mt-8\">\n            {children}\n          </div>\n        )}\n        \n        <Form\n          className=\"mt-8\"\n          route={formRoute}\n          fields={formFields}\n          formSubmitButtonText={formSubmitButtonText} />\n\n      </Card>\n\n    </Container>\n\n  </Dashboard>\n)\n\nexport const CreateLayout = ({ formSubmitButtonText, ...props }) => (\n  <FormLayout formSubmitButtonText={formSubmitButtonText || 'Create'} {...props} />\n)\n\nexport const EditLayout = ({ formSubmitButtonText, ...props }) => (\n  <FormLayout formSubmitButtonText={formSubmitButtonText || 'Save'} {...props} />\n)\n\nexport const IndexLayout = ({\n  \n  pageTitle,\n  pageSuperHeading,\n  pageHeading,\n  pageActions,\n  \n  items,\n  itemTitle,\n  itemRoute,\n  itemActions,\n\n  children,\n\n  ...props\n\n}) => (\n  <Dashboard pageTitle={pageTitle} {...props}>\n\n    <PageHeader\n      superHeading={pageSuperHeading}\n      heading={pageHeading || pageTitle}\n      actions={pageActions} />\n\n    {children && (\n      <div className=\"mt-8\">\n        {children}\n      </div>\n    )}\n\n    <List\n      className=\"mt-8\"\n      items={items}\n      itemTitle={itemTitle}\n      itemRoute={itemRoute}\n      itemActions={itemActions} />\n\n  </Dashboard>\n)\n\nexport function ShowLayout({\n\n  pageTitle,\n  pageSuperHeading,\n  pageHeading,\n  pageActions,\n\n  item,\n  itemTitle,\n  itemEditRoute,\n  itemFields,\n\n}) {\n  return (\n    <Dashboard pageTitle={itemTitle}>\n\n      <PageHeader\n        superHeading={pageSuperHeading}\n        heading={pageHeading || pageTitle}\n        actions={pageActions || (\n          <Button route={itemEditRoute} text=\"Edit\" />\n        )} />\n\n      <div>\n        <div className=\"mt-5 border-t border-chrome-200 dark:border-chrome-800\">\n          <dl className=\"sm:divide-y sm:divide-chrome-200 dark:sm:divide-chrome-800\">\n            {itemFields.map(field => (\n              <div key={field} className=\"py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4\">\n                <dt className=\"text-sm font-medium text-chrome-500\">{field}</dt>\n                <dd className=\"mt-1 text-sm text-chrome-900 dark:text-chrome-100 sm:mt-0 sm:col-span-2\">\n                  {item[field.toLocaleLowerCase().replace(' ', '_')]}\n                </dd>\n              </div>\n            ))}\n          </dl>\n        </div>\n      </div>\n\n    </Dashboard>\n  )\n}","import React from 'react'\nimport { Dashboard, Card, Container, ApplicationLogo } from '..'\n\nexport const Auth = ({ children, ...props }) => (\n  <Dashboard {...props} sidebar={false} topbar={false}>\n    <Container xs>\n\n      <div className=\"flex justify-center\">\n        <ApplicationLogo lg />\n      </div>\n\n      <Card className=\"mt-6\">\n        {children}\n      </Card>\n\n    </Container>\n  </Dashboard>\n)\n","export function Badge({ text, children, dot = false }) {\n\n  return (\n    <>\n      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-theme-100 text-theme-800 dark:text-theme-200 dark:bg-theme-800 opacity-80 group-hover:opacity-100 hover:opacity-100\">\n        {dot && (\n          <svg className=\"-ml-0.5 mr-1.5 h-2 w-2 text-theme-400\" fill=\"currentColor\" viewBox=\"0 0 8 8\">\n            <circle cx={4} cy={4} r={3} />\n          </svg>\n        )}\n        {text}{children}\n      </span>\n    </>\n  )\n  \n}\n","import React from 'react'\nimport { Label, Input } from '.'\n\nexport function InputRow({ label, name, className, errors = [], ...props }) {\n  return (\n    <div className={className}>\n      {label && (\n        <Label className=\"form-label\" htmlFor={name}>\n          {label}:\n        </Label>\n      )}\n      <Input\n        id={name}\n        name={name}\n        {...props}\n        className={`form-input ${errors.length ? 'error' : ''}`}\n      />\n      {errors && <div className=\"form-error\">{errors}</div>}\n    </div>\n  )\n}","export const Invoice = ({\n  columns,\n  items,\n  footerTitle = 'Totals',\n  footerColumns,\n  className\n}) => (\n\n  <div className={`${className} -mx-4 flex flex-col sm:-mx-6 md:mx-0 border-t border-chrome-200 dark:border-chrome-700`}>\n    <table className=\"min-w-full divide-y divide-chrome-200 dark:divide-chrome-700\">\n\n      <thead className=\"sticky z-10 top-0 bg-white dark:bg-chrome-900 bg-opacity-75 backdrop-blur backdrop-filter\">\n        <tr>\n          {columns.map((column, i) => (\n            <th\n              key={column.name}\n              scope=\"col\"\n              className={`${i > 0 ? \"text-right\" : \"text-left\"} text-sm sm:text-base py-3.5 px-3 font-semibold text-chrome-500`}\n            >{column.label}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map((item, i) => (\n          <tr key={item.id} className=\"group border-b border-chrome-200 dark:border-chrome-700 hover:bg-chrome-200 dark:hover:bg-chrome-800\">\n            {columns.map((column, i) => (\n              <td key={`${item.id}_${column.name}`} className={`${i > 0 ? \"text-right\" : \"text-left\"} py-3.5 px-3 text-right dark:text-chrome-300`}>\n                {item[column.name]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n\n      <tfoot className=\"sticky bottom-0 bg-white dark:bg-chrome-900 bg-opacity-75 backdrop-blur backdrop-filter\">\n        <tr>\n          <td className=\"text-left py-3.5 px-3 dark:text-white\">\n            {footerTitle}\n          </td>\n          {footerColumns.map((footerColumn, i) => (\n            <td key={footerColumn.name} className=\"text-right py-3.5 px-3 dark:text-white\">\n              {footerColumn.label}\n            </td>\n          ))}\n        </tr>\n      </tfoot>\n\n    </table>\n  </div>\n\n)","import React from 'react'\nimport { Link } from '.'\n\nexport function NavLink({ href, active, children }) {\n  return (\n    <Link\n      href={href}\n      className={\n        active\n          ? 'inline-flex items-center px-1 pt-1 border-b-2 border-theme-400 text-sm font-medium leading-5 text-chrome-900 focus:outline-none focus:border-theme-700 transition duration-150 ease-in-out'\n          : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-chrome-500 hover:text-chrome-700 hover:border-chrome-300 focus:outline-none focus:text-chrome-700 focus:border-chrome-300 transition duration-150 ease-in-out'\n      }\n    >\n      {children}\n    </Link>\n  )\n}\n","import React from 'react'\nimport { Link } from '.'\n\nexport function ResponsiveNavLink({ method = 'get', as = 'a', href, active = false, children }) {\n  return (\n    <Link\n      method={method}\n      as={as}\n      href={href}\n      className={`w-full flex items-start pl-3 pr-4 py-2 border-l-4 ${\n        active\n          ? 'border-theme-400 text-theme-700 bg-theme-50 focus:outline-none focus:text-theme-800 focus:bg-theme-100 focus:border-theme-700'\n          : 'border-transparent text-chrome-500 hover:text-chrome-800 hover:bg-chrome-50 hover:border-chrome-300'\n      } text-base font-medium focus:outline-none transition duration-150 ease-in-out`}\n    >\n      {children}\n    </Link>\n  )\n}\n","import React from 'react'\nimport { ArrowSmDownIcon, ArrowSmUpIcon } from '@heroicons/react/solid'\nimport { Link } from '.'\nimport { conditionalClassNames } from '@blazervel/blazervel'\n\nexport function Stats({ stats, ...props }) {\n\n  return (\n\n    <div {...props}>\n      <dl className=\"grid grid-cols-1 gap-5 mt-5 sm:grid-cols-2 lg:grid-cols-3\">\n\n        {stats.map((item) => (\n\n          <div key={item.id} className=\"relative px-4 pt-5 pb-12 overflow-hidden bg-white rounded-lg shadow sm:pt-6 sm:px-6\">\n\n            <dt>\n              <div className=\"absolute p-3 bg-theme-500 rounded-md\">\n                <item.icon className=\"w-6 h-6 text-white\" aria-hidden=\"true\" />\n              </div>\n              <div className=\"ml-16 text-sm font-medium text-chrome-500 truncate\">\n                {item.name}\n              </div>\n            </dt>\n\n            <dd className=\"flex items-baseline pb-6 ml-16 sm:pb-7\">\n              <div className=\"text-2xl font-semibold text-chrome-900\">{item.stat}</div>\n              <div\n                className={conditionalClassNames(\n                  item.changeType === 'increase' ? 'text-green-600' : 'text-red-600',\n                  'ml-2 flex items-baseline text-sm font-semibold'\n                )}\n              >\n                {item.changeType === 'increase' ? (\n                  <ArrowSmUpIcon className=\"self-center flex-shrink-0 w-5 h-5 text-green-500\" aria-hidden=\"true\" />\n                ) : (\n                  <ArrowSmDownIcon className=\"self-center flex-shrink-0 w-5 h-5 text-red-500\" aria-hidden=\"true\" />\n                )}\n                <div className=\"sr-only\">{item.changeType === 'increase' ? 'Increased' : 'Decreased'} by</div>\n                {item.change}\n              </div>\n              <div className=\"absolute inset-x-0 bottom-0 px-4 py-4 bg-chrome-50 sm:px-6\">\n                <div className=\"text-sm\">\n                  <Link href={item.route} className=\"font-medium text-theme-600 hover:text-theme-500\">\n                    {' '}\n                    View all <div className=\"sr-only\"> {item.name} stats</div>\n                  </Link>\n                </div>\n              </div>\n            </dd>\n\n          </div>\n\n        ))}\n\n      </dl>\n\n    </div>\n  )\n}\n","import { Checkbox, Button } from '.'\n\nexport function Table({\n  items,\n  itemColumns,\n  itemActions\n}) {\n  \n  let checkedItems = []\n\n  return (\n    <>\n      {items.length > 0 && (\n        <div className=\"overflow-x-auto\">\n          <div className=\"inline-block min-w-full py-2 align-middle\">\n            <div className=\"relative overflow-hidden shadow ring-1 ring-black ring-opacity-5\">\n\n              {checkedItems.length > 0 && (\n                <div className=\"absolute top-0 left-12 flex h-12 items-center space-x-3 bg-chrome-50 sm:left-16\">\n                  <Button text=\"Bulk Edit\" />\n                  <Button text=\"Delete All\" />\n                </div>\n              )}\n\n              <table className=\"min-w-full table-fixed divide-y divide-chrome-300 dark:divide-chrome-700\">\n\n                <thead className=\"bg-chrome-50 dark:bg-chrome-700\">\n                  <tr>\n                    <th scope=\"col\" className=\"relative min-w-[2rem]\">\n                      <Checkbox\n                        // ref={checkbox}\n                        // checked={checked}\n                        // onChange={toggleAll}\n                      />\n                    </th>\n                    {itemColumns.map((column, i) => (\n                      <th key={column.name} scope=\"col\" className=\"px-4 py-3.5 text-left font-medium text-chrome-900 dark:text-chrome-200\">\n                        {column.label}\n                      </th>\n                    ))}\n                    <th scope=\"col\" className=\"relative py-3.5 px-4\">\n                      <span className=\"sr-only\">Edit</span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody className=\"divide-y divide-chrome-200 dark:divide-chrome-700\">\n                  {items.map((item) => (\n                    <tr key={item.id} className={classNames(\n                      'group',\n                      checkedItems.includes(item) ? 'bg-chrome-50 dark:bg-chrome-800' : 'hover:bg-chrome-50 dark:hover:bg-chrome-800'\n                    )}>\n                      <td className=\"relative min-w-[2rem]\">\n                        {checkedItems.includes(item) && (\n                          <div className=\"absolute inset-y-0 left-0 w-0.5 bg-theme-600\" />\n                        )}\n                        <Checkbox\n                          value={item.id}\n                          // checked={checkedItems.includes(item)}\n                          // onChange={(e) =>\n                          //   setSelectedTransactions(\n                          //     e.target.checked\n                          //       ? [...checkedItems, item]\n                          //       : checkedItems.filter((p) => p !== item)\n                          //   )\n                          // }\n                        />\n                      </td>\n                      {itemColumns.map((column, i) => (\n                        <td key={column.name} className=\"whitespace-nowrap px-4 py-3.5 text-sm text-chrome-600 dark:text-chrome-400\">\n                          {item[column.name]}\n                        </td>\n                      ))}\n                      {itemActions && (\n                        <td className=\"whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium\">\n                          {itemActions}\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n\n              </table>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}"],"names":["value","htmlFor","forInput","className","children","handleChange","type","name","onChange","e","xs","sm","md","lg","id","label","autoComplete","required","isFocused","props","mergeCssClasses","base","length","useRef","useEffect","input","current","focus","h","Label","ref","options","defaultValue","Array","isArray","Object","entries","key","map","option","groupOption","useState","query","setQuery","selectedOption","setSelectedOption","filter","toLowerCase","includes","ComboboxHeadless","as","event","Input","target","displayValue","Button","SelectorIcon","aria-hidden","filteredOptions","Options","Option","active","selected","CheckIcon","fields","route","method","formSubmitButtonText","field","useForm","defaults","data","setData","post","put","processing","progress","errors","element","checked","onSubmit","preventDefault","ValidationErrors","i","Select","indexOf","onHandleChange","files","percentage","max","Combobox","onClick","history","back","text","ButtonPrimary","disabled","href","Link","HeartIcon","createContext","setOpen","DropDownContext","Provider","open","toggleOpen","previousState","keys","index","navigation","setSidebarOpen","item","icon","Transition","Root","show","Fragment","Dialog","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","XIcon","ApplicationLogo","Navigation","MenuIcon","Dropdown","Trigger","useContext","Content","align","width","contentClasses","alignmentClasses","widthClasses","Disclosure","Panel","outline","maxWidth","fw","superHeading","heading","actions","xl","Icon","SectionHeader","ButtonElement","ButtonBase","only","replace","Inertia","items","itemTitle","itemRoute","itemActions","headingIcon","noneFoundRoute","role","ListItem","NoneFound","title","pageTitle","sidebar","Head","Sidebar","Container","Topbar","formRoute","formFields","Dashboard","Card","PageHeader","pageHeading","pageActions","Form","topbar","dot","fill","viewBox","cx","cy","r","FormLayout","pageSuperHeading","List","columns","footerTitle","footerColumns","column","scope","footerColumn","itemFields","itemEditRoute","toLocaleLowerCase","stats","stat","conditionalClassNames","changeType","ArrowSmUpIcon","ArrowSmDownIcon","change","itemColumns","checkedItems","Checkbox","classNames"],"mappings":"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"}